import{_ as s,c as n,o as a,a as l}from"./app.dd2a2f01.js";const d=JSON.parse('{"title":"SCIF by example","description":"","frontmatter":{},"headers":[{"level":2,"title":"Multi-User Wallet","slug":"multi-user-wallet","link":"#multi-user-wallet","children":[]},{"level":2,"title":"ERC20 token","slug":"erc20-token","link":"#erc20-token","children":[]}],"relativePath":"Introduction/scif-by-example.md","lastUpdated":1735665626000}'),e={name:"Introduction/scif-by-example.md"},o=l(`<h1 id="scif-by-example" tabindex="-1">SCIF by example <a class="header-anchor" href="#scif-by-example" aria-hidden="true">#</a></h1><h2 id="multi-user-wallet" tabindex="-1">Multi-User Wallet <a class="header-anchor" href="#multi-user-wallet" aria-hidden="true">#</a></h2><p>The following contract demonstrates a straightforward implementation of a multi-user wallet, which allows any user to deposit and withdraw funds from the wallet in a secure manner.</p><div class="language-scif"><button title="Copy Code" class="copy"></button><span class="lang">scif</span><pre><code><span class="line"><span style="color:#D8DEE9FF;">contract Wallet </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#88C0D0;">map</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">address</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">uint</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> balances</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    @public</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">withdraw</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">uint</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#88C0D0;">endorse</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">amount</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">any </span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">this</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">balances</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&gt;=</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#88C0D0;">lock</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">this</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#88C0D0;">send</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                balances</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-=</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">else</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            revert </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">insufficient funds</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    @public</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    @payable</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">deposit</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        balances</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+=</span><span style="color:#D8DEE9FF;"> value</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><p>Both the <code>withdraw</code> and <code>deposit</code> methods are decorated as <code>public</code>, which designates them as <em>entry points</em> by default. As a result, these methods can be invoked by anyone, including untrusted parties, to access the wallet&#39;s services.</p><p>The <code>withdraw</code> method is particularly noteworthy. The sender initiates a withdrawal request for a specified amount of funds. By default, the <code>amount</code> variable is labeled as <code>any</code> (indicating that it is untrusted). However, to manipulate the sensitive <code>balances</code> data according to the untrusted <code>amount</code>, we need to employ a <em>conditioned endorsement</em>. This endorsement permits the endorsement of <code>amount</code> only when the sender possesses sufficient funds.</p><p>Within the <code>if</code> branch, the funds are transferred and the <code>balances</code> are updated. Performing these operations without additional security measures could introduce a reentrancy vulnerability, enabling the sender to call the <code>withdraw</code> method again before the <code>balances</code> have been updated. To counter this, a dynamic lock is explicitly applied to the integrity level <code>this</code> (referring to the integrity level of the current contract instance). Consequently, SCIF ensures that no reentrancy can occur for any methods with integrity level <code>this</code>, including the <code>withdraw</code> method.</p><p>SCIF supports <em>exceptions</em> to enable more sophisticated control flows. The following contract showcases a multi-user wallet implementation that incorporates exceptions.</p><div class="language-scif"><button title="Copy Code" class="copy"></button><span class="lang">scif</span><pre><code><span class="line"><span style="color:#D8DEE9FF;">contract Wallet </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#88C0D0;">map</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">address</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">uint</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> balances</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    exception balanceNotEnough</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    exception transferFailure</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    @public</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">withdraw</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">uint</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">throws</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">balanceNotEnough</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> transferFailure</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#88C0D0;">endorse</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">amount</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">any </span><span style="color:#81A1C1;">-&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">this</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">balances</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&gt;=</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#88C0D0;">lock</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">this</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                atomic </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    </span><span style="color:#88C0D0;">send</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">rescue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">error e</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    throw transferFailure</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                balances</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-=</span><span style="color:#D8DEE9FF;"> amount</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">else</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            throw balanceNotEnough</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    @public</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    @payable</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">deposit</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        balances</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">sender</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+=</span><span style="color:#D8DEE9FF;"> value</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><p>In this example, two custom exceptions have been defined: <code>balanceNotEnough</code> and <code>transferFailure</code>. These exceptions represent scenarios where the sender has insufficient funds and scenarios where the call to <code>send</code> fails, respectively. It is important to note the use of the <code>atomic</code>/<code>rescue</code> pattern for invoking the <code>send</code> method and handling any exceptions or errors resulting from the call. This pattern ensures that the control flow outcome of operations inside the <code>atomic</code> block does not influence the control flow outside the block, thus alleviating the burden on developers when reasoning about control flow.</p><h2 id="erc20-token" tabindex="-1">ERC20 token <a class="header-anchor" href="#erc20-token" aria-hidden="true">#</a></h2>`,11),p=[o];function t(c,r,E,F,y,i){return a(),n("div",null,p)}const C=s(e,[["render",t]]);export{d as __pageData,C as default};
