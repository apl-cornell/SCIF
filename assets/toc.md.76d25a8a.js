import{_ as e,c as i,o as a,a as t}from"./app.dd2a2f01.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"Getting Started","slug":"getting-started","link":"#getting-started","children":[]},{"level":3,"title":"Layout of a SCIF source file","slug":"layout-of-a-scif-source-file","link":"#layout-of-a-scif-source-file","children":[]},{"level":3,"title":"SCIF by Examples","slug":"scif-by-examples","link":"#scif-by-examples","children":[]},{"level":2,"title":"Language Basics","slug":"language-basics","link":"#language-basics","children":[{"level":3,"title":"Information flow control","slug":"information-flow-control","link":"#information-flow-control","children":[]},{"level":3,"title":"Types","slug":"types","link":"#types","children":[]},{"level":3,"title":"Contracts","slug":"contracts","link":"#contracts","children":[]},{"level":3,"title":"Expressions and Statements","slug":"expressions-and-statements","link":"#expressions-and-statements","children":[]},{"level":3,"title":"Built-in methods and variables","slug":"built-in-methods-and-variables","link":"#built-in-methods-and-variables","children":[]}]},{"level":2,"title":"Security Mechanisms","slug":"security-mechanisms","link":"#security-mechanisms","children":[{"level":3,"title":"Information flow control","slug":"information-flow-control-1","link":"#information-flow-control-1","children":[]},{"level":3,"title":"Label model","slug":"label-model","link":"#label-model","children":[]},{"level":3,"title":"Label Checking","slug":"label-checking","link":"#label-checking","children":[]},{"level":3,"title":"Reentrancy Protection","slug":"reentrancy-protection","link":"#reentrancy-protection","children":[]},{"level":3,"title":"Confused Deputy Protection","slug":"confused-deputy-protection","link":"#confused-deputy-protection","children":[]},{"level":3,"title":"Runtime System","slug":"runtime-system","link":"#runtime-system","children":[]}]},{"level":2,"title":"Compiling to Solidity","slug":"compiling-to-solidity","link":"#compiling-to-solidity","children":[]},{"level":2,"title":"Deploying to Ethereum","slug":"deploying-to-ethereum","link":"#deploying-to-ethereum","children":[{"level":3,"title":"contract creation","slug":"contract-creation","link":"#contract-creation","children":[]},{"level":3,"title":"interacting with contracts","slug":"interacting-with-contracts","link":"#interacting-with-contracts","children":[]}]},{"level":2,"title":"Section 1","slug":"section-1","link":"#section-1","children":[]},{"level":2,"title":"Section 2","slug":"section-2","link":"#section-2","children":[]}],"relativePath":"toc.md","lastUpdated":1736255728000}'),l={name:"toc.md"},n=t(`<h3 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h3><h3 id="layout-of-a-scif-source-file" tabindex="-1">Layout of a SCIF source file <a class="header-anchor" href="#layout-of-a-scif-source-file" aria-hidden="true">#</a></h3><h3 id="scif-by-examples" tabindex="-1">SCIF by Examples <a class="header-anchor" href="#scif-by-examples" aria-hidden="true">#</a></h3><h2 id="language-basics" tabindex="-1">Language Basics <a class="header-anchor" href="#language-basics" aria-hidden="true">#</a></h2><h3 id="information-flow-control" tabindex="-1">Information flow control <a class="header-anchor" href="#information-flow-control" aria-hidden="true">#</a></h3><ul><li>Principals</li><li>Integrity Policy</li></ul><h3 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-hidden="true">#</a></h3><ul><li>Primitive types</li><li>Arrays</li><li>Maps</li><li>Classes</li><li>Labels</li></ul><h3 id="contracts" tabindex="-1">Contracts <a class="header-anchor" href="#contracts" aria-hidden="true">#</a></h3><ul><li>Structure of a contract</li><li>State variables</li><li>Exceptions</li><li>Methods <ul><li>Labels</li></ul></li><li>Inheritance</li><li>Interfaces</li></ul><h3 id="expressions-and-statements" tabindex="-1">Expressions and Statements <a class="header-anchor" href="#expressions-and-statements" aria-hidden="true">#</a></h3><ul><li>Contract creation</li><li>Unary expressions</li><li>Binary expressions</li><li>Method calls</li><li>Assignments</li><li>Control structures</li><li>Scoping and declarations</li><li>Exceptions</li></ul><h3 id="built-in-methods-and-variables" tabindex="-1">Built-in methods and variables <a class="header-anchor" href="#built-in-methods-and-variables" aria-hidden="true">#</a></h3><h2 id="security-mechanisms" tabindex="-1">Security Mechanisms <a class="header-anchor" href="#security-mechanisms" aria-hidden="true">#</a></h2><h3 id="information-flow-control-1" tabindex="-1">Information flow control <a class="header-anchor" href="#information-flow-control-1" aria-hidden="true">#</a></h3><h3 id="label-model" tabindex="-1">Label model <a class="header-anchor" href="#label-model" aria-hidden="true">#</a></h3><ul><li>Variable labels</li><li>Method labels</li></ul><h3 id="label-checking" tabindex="-1">Label Checking <a class="header-anchor" href="#label-checking" aria-hidden="true">#</a></h3><ul><li>Variable access</li><li>Method declarations</li><li>Method calls</li><li>Dynamic trust and label checking</li></ul><h3 id="reentrancy-protection" tabindex="-1">Reentrancy Protection <a class="header-anchor" href="#reentrancy-protection" aria-hidden="true">#</a></h3><ul><li>Reentrancy Security</li><li>Locks enforcing reentrancy</li><li>Static locks</li><li>Dynamic locks</li></ul><h3 id="confused-deputy-protection" tabindex="-1">Confused Deputy Protection <a class="header-anchor" href="#confused-deputy-protection" aria-hidden="true">#</a></h3><h3 id="runtime-system" tabindex="-1">Runtime System <a class="header-anchor" href="#runtime-system" aria-hidden="true">#</a></h3><ul><li>Dynamic trust management</li><li>Dynamic lock management</li><li>Customizable management policies</li></ul><h2 id="compiling-to-solidity" tabindex="-1">Compiling to Solidity <a class="header-anchor" href="#compiling-to-solidity" aria-hidden="true">#</a></h2><h2 id="deploying-to-ethereum" tabindex="-1">Deploying to Ethereum <a class="header-anchor" href="#deploying-to-ethereum" aria-hidden="true">#</a></h2><h3 id="contract-creation" tabindex="-1">contract creation <a class="header-anchor" href="#contract-creation" aria-hidden="true">#</a></h3><h3 id="interacting-with-contracts" tabindex="-1">interacting with contracts <a class="header-anchor" href="#interacting-with-contracts" aria-hidden="true">#</a></h3><ul><li>SCIF contract</li><li>legacy contract</li></ul><h2 id="section-1" tabindex="-1">Section 1 <a class="header-anchor" href="#section-1" aria-hidden="true">#</a></h2><p>An example of internal link: <a href="/SCIF/Introduction/getting-started.html">Getting Started</a></p><div class="language-scif"><button title="Copy Code" class="copy"></button><span class="lang">scif</span><pre><code><span class="line"><span style="color:#D8DEE9FF;">public class Example </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    private </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> x</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    public </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">x</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> x</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="section-2" tabindex="-1">Section 2 <a class="header-anchor" href="#section-2" aria-hidden="true">#</a></h2><p>!!! Note This is an admonition</p><p>!!! Info This is another admonition. For more styles, go to <a href="https://squidfunk.github.io/mkdocs-material/reference/admonitions" target="_blank" rel="noreferrer">Admonitions</a>.</p>`,35),s=[n];function r(o,c,d,h,u,p){return a(),i("div",null,s)}const y=e(l,[["render",r]]);export{f as __pageData,y as default};
