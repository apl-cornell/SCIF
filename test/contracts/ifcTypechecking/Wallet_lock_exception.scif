contract Wallet {
    map(address, uint) balances;
    exception balanceNotEnough();
    exception transferFailure();

    @public
    void withdraw(uint _amount) throws (balanceNotEnough, transferFailure) {
        uint amount = endorse(_amount, any -> this);
        if (balances[sender] >= amount) {
            lock(this) {
                atomic {
                    send(sender, amount);
                } rescue * {
                    throw transferFailure();
                }
                balances[sender] = balances[sender] - amount;
            }
        } else {
            throw balanceNotEnough();
        }
    }

    @public
    void deposit() {
        balances[sender] = balances[sender] + value;
    }
}
