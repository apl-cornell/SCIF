CONSTRUCTOR s11.Uniswap.TOP 0
CONSTRUCTOR s11.Uniswap.constructor.sender 0
CONSTRUCTOR s11.Uniswap.addLiquidity.sender 0
CONSTRUCTOR s11.Uniswap.removeLiquidity.sender 0
CONSTRUCTOR s11.Uniswap.this 0
CONSTRUCTOR s11.Uniswap.any 0
%%
s11.Uniswap.any >= s11.Uniswap.constructor.sender;
s11.Uniswap.TOP <= s11.Uniswap.constructor.sender;
s11.Uniswap.any >= s11.Uniswap.addLiquidity.sender;
s11.Uniswap.TOP <= s11.Uniswap.addLiquidity.sender;
s11.Uniswap.any >= s11.Uniswap.removeLiquidity.sender;
s11.Uniswap.TOP <= s11.Uniswap.removeLiquidity.sender;
s11.Uniswap.any >= s11.Uniswap.this;
s11.Uniswap.TOP <= s11.Uniswap.this;
s11.Uniswap.TOP <= s11.Uniswap.any;
s11.Uniswap.TOP == s11.Uniswap.this;
%%
s11.Uniswap.bypassLocks.extpc <= s11.Uniswap.bypassLocks.from..lbl ;["Argument from must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 16,22-16,22#1]
s11.Uniswap.balance.extpc <= s11.Uniswap.balance.addr..lbl ;["Argument addr must be no more trusted than caller's integrity@Builtin": 1,0-1,0#1]
s11.Uniswap.trusts.extpc <= s11.Uniswap.trusts.a..lbl ;["Argument a must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,17-10,17#1]
s11.Uniswap.trusts.extpc <= s11.Uniswap.trusts.b..lbl ;["Argument b must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,28-10,28#1]
s11.Uniswap.releaseLock.extpc <= s11.Uniswap.releaseLock.l..lbl ;["Argument l must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 37,22-37,22#1]
s11.Uniswap.acquireLock.extpc <= s11.Uniswap.acquireLock.l..lbl ;["Argument l must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 26,22-26,22#1]
s11.Uniswap.constructor.extpc <= s11.Uniswap.constructor.token_addr..lbl ;["Argument token_addr must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,17-14,17#1]
s11.Uniswap.constructor.extpc <= s11.Uniswap.constructor._name..lbl ;["Argument _name must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,37-14,37#1]
s11.Uniswap.constructor.extpc <= s11.Uniswap.constructor._symbol..lbl ;["Argument _symbol must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,50-14,50#1]
s11.Uniswap.removeLiquidity.extpc <= s11.Uniswap.removeLiquidity.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,34-56,34#1]
s11.Uniswap.removeLiquidity.extpc <= s11.Uniswap.removeLiquidity.min_eth..lbl ;["Argument min_eth must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,47-56,47#1]
s11.Uniswap.removeLiquidity.extpc <= s11.Uniswap.removeLiquidity.min_tokens..lbl ;["Argument min_tokens must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,61-56,61#1]
s11.Uniswap.removeLiquidity.extpc <= s11.Uniswap.removeLiquidity.deadline..lbl ;["Argument deadline must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,78-56,78#1]
s11.Uniswap.send.extpc <= s11.Uniswap.send.target..lbl ;["Argument target must be no more trusted than caller's integrity@Builtin": 1,0-1,0#1]
s11.Uniswap.send.extpc <= s11.Uniswap.send.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@Builtin": 1,1-1,1#1]
s11.Uniswap.addLiquidity.extpc <= s11.Uniswap.addLiquidity.min_liquidity..lbl ;["Argument min_liquidity must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,31-23,31#1]
s11.Uniswap.addLiquidity.extpc <= s11.Uniswap.addLiquidity.max_tokens..lbl ;["Argument max_tokens must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,51-23,51#1]
s11.Uniswap.addLiquidity.extpc <= s11.Uniswap.addLiquidity.deadline..lbl ;["Argument deadline must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,68-23,68#1]
s12.IERC20.transferFrom.extpc <= s12.IERC20.transferFrom.from..lbl ;["Argument from must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,58-8,58#1]
s12.IERC20.transferFrom.extpc <= s12.IERC20.transferFrom.to..lbl ;["Argument to must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,72-8,72#1]
s12.IERC20.transferFrom.extpc <= s12.IERC20.transferFrom.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,84-8,84#1]
s12.IERC20.transfer.extpc <= s12.IERC20.transfer.from..lbl ;["Argument from must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,47-7,47#1]
s12.IERC20.transfer.extpc <= s12.IERC20.transfer.to..lbl ;["Argument to must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,61-7,61#1]
s12.IERC20.transfer.extpc <= s12.IERC20.transfer.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,73-7,73#1]
s12.IERC20.balance.extpc <= s12.IERC20.balance.addr..lbl ;["Argument addr must be no more trusted than caller's integrity@Builtin": 1,0-1,0#1]
s12.IERC20.approve.extpc <= s12.IERC20.approve.allowed..lbl ;["Argument allowed must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,34-5,34#1]
s12.IERC20.approve.extpc <= s12.IERC20.approve.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,51-5,51#1]
s12.IERC20.approveFrom.extpc <= s12.IERC20.approveFrom.from..lbl ;["Argument from must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,48-6,48#1]
s12.IERC20.approveFrom.extpc <= s12.IERC20.approveFrom.spender..lbl ;["Argument spender must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,62-6,62#1]
s12.IERC20.approveFrom.extpc <= s12.IERC20.approveFrom.val..lbl ;["Argument val must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,79-6,79#1]
s12.IERC20.balanceOf.extpc <= s12.IERC20.balanceOf.account..lbl ;["Argument account must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,28-4,28#1]
s12.IERC20.send.extpc <= s12.IERC20.send.target..lbl ;["Argument target must be no more trusted than caller's integrity@Builtin": 1,0-1,0#1]
s12.IERC20.send.extpc <= s12.IERC20.send.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@Builtin": 1,1-1,1#1]
s12.IERC20.transferFrom.extpc <= s12.IERC20.transferFrom.from..lbl ;["Argument from must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,58-8,58#1]
s12.IERC20.transferFrom.extpc <= s12.IERC20.transferFrom.to..lbl ;["Argument to must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,72-8,72#1]
s12.IERC20.transferFrom.extpc <= s12.IERC20.transferFrom.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,84-8,84#1]
s12.IERC20.transfer.extpc <= s12.IERC20.transfer.from..lbl ;["Argument from must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,47-7,47#1]
s12.IERC20.transfer.extpc <= s12.IERC20.transfer.to..lbl ;["Argument to must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,61-7,61#1]
s12.IERC20.transfer.extpc <= s12.IERC20.transfer.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,73-7,73#1]
s12.IERC20.balance.extpc <= s12.IERC20.balance.addr..lbl ;["Argument addr must be no more trusted than caller's integrity@Builtin": 1,0-1,0#1]
s12.IERC20.approve.extpc <= s12.IERC20.approve.allowed..lbl ;["Argument allowed must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,34-5,34#1]
s12.IERC20.approve.extpc <= s12.IERC20.approve.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,51-5,51#1]
s12.IERC20.approveFrom.extpc <= s12.IERC20.approveFrom.from..lbl ;["Argument from must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,48-6,48#1]
s12.IERC20.approveFrom.extpc <= s12.IERC20.approveFrom.spender..lbl ;["Argument spender must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,62-6,62#1]
s12.IERC20.approveFrom.extpc <= s12.IERC20.approveFrom.val..lbl ;["Argument val must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,79-6,79#1]
s12.IERC20.balanceOf.extpc <= s12.IERC20.balanceOf.account..lbl ;["Argument account must be no more trusted than caller's integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,28-4,28#1]
s12.IERC20.send.extpc <= s12.IERC20.send.target..lbl ;["Argument target must be no more trusted than caller's integrity@Builtin": 1,0-1,0#1]
s12.IERC20.send.extpc <= s12.IERC20.send.amount..lbl ;["Argument amount must be no more trusted than caller's integrity@Builtin": 1,1-1,1#1]
s11.Uniswap.removeLiquidity.inpc == s11.Uniswap.removeLiquidity.PC ;["Control flow of this method start with its call-after(second) label@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.codeLbl <= s11.Uniswap.removeLiquidity.inpc ;["This contract should be trusted enough to call this method@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.removeLiquidity.ILK <= s11.Uniswap.removeLiquidity.PC ;["The statically locked integrity must be at least as trusted as initial pc integrity@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.removeLiquidity.ILK <= s11.Uniswap.removeLiquidity.CompareL57C18s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.CompareL57C18s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#1]
s11.Uniswap.removeLiquidity.CompareL57C18s11.LK <= s11.Uniswap.removeLiquidity.CompareL57C32s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,43-57,43#1]
s11.Uniswap.removeLiquidity.NameL57C32s11.PC.next <= s11.Uniswap.removeLiquidity.CompareL57C32s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,43-57,43#1]
s11.Uniswap.removeLiquidity.CompareL57C32s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,32-57,32#1]
s11.Uniswap.removeLiquidity.CompareL57C32s11.PC <= s11.Uniswap.removeLiquidity.BoolOpL57C27s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,32-57,32#1]
s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK <= s11.Uniswap.removeLiquidity.CompareL57C53s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.CompareL57C53s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#1]
s11.Uniswap.removeLiquidity.CompareL57C53s11.LK <= s11.Uniswap.removeLiquidity.CompareL57C68s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,81-57,81#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.CompareL57C68s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,81-57,81#1]
s11.Uniswap.removeLiquidity.CompareL57C68s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL57C63s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,68-57,68#1]
s11.Uniswap.removeLiquidity.CompareL57C68s11.PC <= s11.Uniswap.removeLiquidity.BoolOpL57C63s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,68-57,68#1]
s11.Uniswap.removeLiquidity.BoolOpL57C63s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL57C46s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#1]
s11.Uniswap.removeLiquidity.BoolOpL57C63s11.PC <= s11.Uniswap.removeLiquidity.BoolOpL57C46s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#1]
s11.Uniswap.removeLiquidity.BoolOpL57C46s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 58,32-58,32#1]
s11.Uniswap.removeLiquidity.BoolOpL57C46s11.PC <= s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 58,32-58,32#1]
s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.LK <= s11.Uniswap.removeLiquidity.CompareL59C17s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,35-59,35#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.CompareL59C17s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,35-59,35#1]
s11.Uniswap.removeLiquidity.CallL60C46s11.LK <= s11.Uniswap.removeLiquidity.CallL60C46s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,54-60,54#1]
s11.Uniswap.removeLiquidity.CallL60C46s11.PC <= s11.Uniswap.removeLiquidity.CallL60C46s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,54-60,54#1]
s11.Uniswap.removeLiquidity.CallL60C36s11.LK <= s11.Uniswap.removeLiquidity.CallL60C36s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
s11.Uniswap.removeLiquidity.CallL60C36s11.PC <= s11.Uniswap.removeLiquidity.CallL60C36s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
s11.Uniswap.removeLiquidity.CallL60C36s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL60C14s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
s11.Uniswap.removeLiquidity.CallL60C36s11.PC <= s11.Uniswap.removeLiquidity.AnnAssignL60C14s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
s11.Uniswap.removeLiquidity.AnnAssignL60C14s11.PC <= s11.Uniswap.removeLiquidity.EndorseL61C20s11.PC ;["The control flow of this expression would be endorsed@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,20-61,20#1]
s11.Uniswap.removeLiquidity.AnnAssignL60C14s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,20-61,20#1]
s11.Uniswap.removeLiquidity.AnnAssignL60C14s11.PC <= s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,20-61,20#1]
s11.Uniswap.removeLiquidity.CallL62C41s11.LK <= s11.Uniswap.removeLiquidity.CallL62C41s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,49-62,49#1]
s11.Uniswap.removeLiquidity.CallL62C41s11.PC <= s11.Uniswap.removeLiquidity.CallL62C41s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,49-62,49#1]
s11.Uniswap.removeLiquidity.CallL62C33s11.LK <= s11.Uniswap.removeLiquidity.CallL62C33s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#1]
s11.Uniswap.removeLiquidity.CallL62C33s11.PC <= s11.Uniswap.removeLiquidity.CallL62C33s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#1]
s11.Uniswap.removeLiquidity.CallL62C33s11.LK <= s11.Uniswap.removeLiquidity.BinOpL62C27s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#1]
s11.Uniswap.removeLiquidity.CallL62C33s11.PC <= s11.Uniswap.removeLiquidity.BinOpL62C27s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#1]
s11.Uniswap.removeLiquidity.BinOpL62C27s11.LK <= s11.Uniswap.removeLiquidity.BinOpL62C54s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,58-62,58#1]
s11.Uniswap.removeLiquidity.BinOpL62C27s11.PC.next <= s11.Uniswap.removeLiquidity.BinOpL62C54s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,58-62,58#1]
s11.Uniswap.removeLiquidity.BinOpL62C54s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,54-62,54#1]
s11.Uniswap.removeLiquidity.BinOpL62C54s11.PC <= s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,54-62,54#1]
s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK <= s11.Uniswap.removeLiquidity.BinOpL63C29s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#1]
s11.Uniswap.removeLiquidity.NameL63C29s11.PC.next <= s11.Uniswap.removeLiquidity.BinOpL63C29s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#1]
s11.Uniswap.removeLiquidity.BinOpL63C29s11.LK <= s11.Uniswap.removeLiquidity.BinOpL63C35s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,51-63,51#1]
s11.Uniswap.removeLiquidity.BinOpL63C29s11.PC.next <= s11.Uniswap.removeLiquidity.BinOpL63C35s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,51-63,51#1]
s11.Uniswap.removeLiquidity.BinOpL63C35s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#1]
s11.Uniswap.removeLiquidity.BinOpL63C35s11.PC <= s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#1]
s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK <= s11.Uniswap.removeLiquidity.CompareL64C17s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,31-64,31#1]
s11.Uniswap.removeLiquidity.NameL64C17s11.PC.next <= s11.Uniswap.removeLiquidity.CompareL64C17s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,31-64,31#1]
s11.Uniswap.removeLiquidity.CompareL64C17s11.LK <= s11.Uniswap.removeLiquidity.CompareL64C42s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,58-64,58#1]
s11.Uniswap.removeLiquidity.NameL64C42s11.PC.next <= s11.Uniswap.removeLiquidity.CompareL64C42s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,58-64,58#1]
s11.Uniswap.removeLiquidity.CompareL64C42s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,42-64,42#1]
s11.Uniswap.removeLiquidity.CompareL64C42s11.PC <= s11.Uniswap.removeLiquidity.BoolOpL64C31s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,42-64,42#1]
s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK <= s11.Uniswap.removeLiquidity.BinOpL65C29s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.SubscriptL65C9s11.PC.next <= s11.Uniswap.removeLiquidity.BinOpL65C29s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.BinOpL65C29s11.LK <= s11.Uniswap.removeLiquidity.AssignL65C24s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.BinOpL65C29s11.PC <= s11.Uniswap.removeLiquidity.AssignL65C24s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.AssignL65C24s11.LK <= s11.Uniswap.removeLiquidity.BinOpL66C23s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,41-66,41#1]
s11.Uniswap.removeLiquidity.NameL66C23s11.PC.next <= s11.Uniswap.removeLiquidity.BinOpL66C23s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,41-66,41#1]
s11.Uniswap.removeLiquidity.BinOpL66C23s11.LK <= s11.Uniswap.removeLiquidity.AssignL66C9s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#1]
s11.Uniswap.removeLiquidity.BinOpL66C23s11.PC <= s11.Uniswap.removeLiquidity.AssignL66C9s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#1]
s11.Uniswap.removeLiquidity.CallL67C9s11.LK <= s11.Uniswap.removeLiquidity.CallL67C9s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,9-67,9#1]
s11.Uniswap.removeLiquidity.CallL67C9s11.PC <= s11.Uniswap.removeLiquidity.CallL67C9s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,9-67,9#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.LK <= s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,36-69,36#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.PC <= s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,36-69,36#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.LK <= s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,19-69,19#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.PC <= s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,19-69,19#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.LK <= s11.Uniswap.removeLiquidity.atomicL68C9s11.AtomicL68C9s11.LK ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 68,9-68,9#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.PC <= s11.Uniswap.removeLiquidity.atomicL68C9s11.AtomicL68C9s11.PC ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 68,9-68,9#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.LK <= s11.Uniswap.removeLiquidity.rtn.lk ;["actually-maintained lock of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 68,9-68,9#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C19s11.PC <= s11.Uniswap.removeLiquidity.rtn.pc ;["normal termination control flow of the last sub-statement flows to parent-statement's one@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 68,9-68,9#1]
s11.Uniswap.symbol..lbl == s11.Uniswap.this ;["Variable symbol may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 5,11-5,11#1]
s11.Uniswap.totalSupply..lbl == s11.Uniswap.this ;["Variable totalSupply may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 7,10-7,10#1]
s11.Uniswap.this..lbl == s11.Uniswap.this ;["Variable this may be labeled incorrectly@Builtin": 0,0-0,0#1]
s11.Uniswap.any..lbl == s11.Uniswap.any ;["Variable any may be labeled incorrectly@Builtin": 2,0-2,0#1]
s11.Uniswap.UINT_MAX..lbl == s11.Uniswap.TOP ;["Variable UINT_MAX may be labeled incorrectly@Builtin": 3,0-3,0#1]
s11.Uniswap.token..lbl == s11.Uniswap.this ;["Variable token may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 12,12-12,12#1]
s11.Uniswap.m_lock..lbl == s11.Uniswap.this ;["Variable m_lock may be labeled incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 4,10-4,10#1]
s11.Uniswap.balances..lbl == s11.Uniswap.this ;["Variable balances may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 8,24-8,24#1]
s11.Uniswap.TOP..lbl == s11.Uniswap.TOP ;["Variable TOP may be labeled incorrectly@Builtin": 1,0-1,0#1]
s11.Uniswap.decimals..lbl == s11.Uniswap.this ;["Variable decimals may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 6,10-6,10#1]
s11.Uniswap.name..lbl == s11.Uniswap.this ;["Variable name may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 4,11-4,11#1]
s11.Uniswap.allowances..lbl == s11.Uniswap.this ;["Variable allowances may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 9,38-9,38#1]
s11.Uniswap.token_to_exchange..lbl == s11.Uniswap.this ;["Variable token_to_exchange may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 10,27-10,27#1]
s11.Uniswap.PC <= s11.Uniswap.TOP..lbl ;["Integrity of control flow must be trusted to allow this assignment@Builtin": 1,0-1,0#1]
s11.Uniswap.PC <= s11.Uniswap.any..lbl ;["Integrity of control flow must be trusted to allow this assignment@Builtin": 2,0-2,0#1]
s11.Uniswap.PC <= s11.Uniswap.this..lbl ;["Integrity of control flow must be trusted to allow this assignment@Builtin": 0,0-0,0#1]
s11.Uniswap.PC <= s11.Uniswap.UINT_MAX..lbl ;["Integrity of control flow must be trusted to allow this assignment@Builtin": 3,0-3,0#1]
s11.Uniswap.PC <= s11.Uniswap.m_lock..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 4,10-4,10#1]
s11.Uniswap.PC <= s11.Uniswap.name..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 4,11-4,11#1]
s11.Uniswap.PC <= s11.Uniswap.symbol..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 5,11-5,11#1]
s11.Uniswap.PC <= s11.Uniswap.decimals..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 6,10-6,10#1]
s11.Uniswap.PC <= s11.Uniswap.totalSupply..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 7,10-7,10#1]
s11.Uniswap.PC <= s11.Uniswap.balances..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 8,24-8,24#1]
s11.Uniswap.PC <= s11.Uniswap.allowances..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 9,38-9,38#1]
s11.Uniswap.PC <= s11.Uniswap.token_to_exchange..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 10,27-10,27#1]
s11.Uniswap.PC <= s11.Uniswap.token..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 12,12-12,12#1]
s11.Uniswap.this == s11.Uniswap.bypassLocks.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 16,5-16,5#1]
s11.Uniswap.this == s11.Uniswap.bypassLocks.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 16,5-16,5#1]
s11.Uniswap.this == s11.Uniswap.bypassLocks.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 16,5-16,5#1]
s11.Uniswap.this == s11.Uniswap.bypassLocks.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 16,5-16,5#1]
s11.Uniswap.bypassLocks.from..lbl == s11.Uniswap.this ;["Argument from may be labeled incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 16,22-16,22#1]
s11.Uniswap.any == s11.Uniswap.balance.extpc ;["Integrity requirement to call this method may be incorrect@Builtin": 0,0-0,0#1]
s11.Uniswap.TOP == s11.Uniswap.balance.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@Builtin": 0,0-0,0#1]
s11.Uniswap.TOP == s11.Uniswap.balance.gamma ;["The final reentrancy lock label may be declared incorrectly@Builtin": 0,0-0,0#1]
s11.Uniswap.TOP == s11.Uniswap.balance.returnV ;["Integrity label of this method's return value may be incorrect@Builtin": 0,0-0,0#1]
s11.Uniswap.balance.addr..lbl == s11.Uniswap.any ;["Argument addr may be labeled incorrectly@Builtin": 1,0-1,0#1]
s11.Uniswap.trusts.sender == s11.Uniswap.trusts.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,5-10,5#1]
s11.Uniswap.this == s11.Uniswap.trusts.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,5-10,5#1]
s11.Uniswap.this == s11.Uniswap.trusts.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,5-10,5#1]
s11.Uniswap.trusts.sender == s11.Uniswap.trusts.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,5-10,5#1]
s11.Uniswap.trusts.a..lbl == s11.Uniswap.trusts.sender ;["Argument a may be labeled incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,17-10,17#1]
s11.Uniswap.trusts.b..lbl == s11.Uniswap.trusts.sender ;["Argument b may be labeled incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 10,28-10,28#1]
s11.Uniswap.this == s11.Uniswap.releaseLock.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 37,5-37,5#1]
s11.Uniswap.this == s11.Uniswap.releaseLock.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 37,5-37,5#1]
s11.Uniswap.this == s11.Uniswap.releaseLock.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 37,5-37,5#1]
s11.Uniswap.this == s11.Uniswap.releaseLock.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 37,5-37,5#1]
s11.Uniswap.releaseLock.l..lbl == s11.Uniswap.this ;["Argument l may be labeled incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 37,22-37,22#1]
s11.Uniswap.this == s11.Uniswap.acquireLock.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 26,5-26,5#1]
s11.Uniswap.this == s11.Uniswap.acquireLock.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 26,5-26,5#1]
s11.Uniswap.this == s11.Uniswap.acquireLock.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 26,5-26,5#1]
s11.Uniswap.this == s11.Uniswap.acquireLock.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 26,5-26,5#1]
s11.Uniswap.acquireLock.l..lbl == s11.Uniswap.this ;["Argument l may be labeled incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 26,22-26,22#1]
s11.Uniswap.$superUniswap.sender == s11.Uniswap.$superUniswap.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 6,5-6,5#1]
s11.Uniswap.this == s11.Uniswap.$superUniswap.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 6,5-6,5#1]
s11.Uniswap.$superUniswap.sender == s11.Uniswap.$superUniswap.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 6,5-6,5#1]
s11.Uniswap.$superUniswap.sender == s11.Uniswap.$superUniswap.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/build/resources/main/builtin_files/ContractImp.scif": 6,5-6,5#1]
s11.Uniswap.constructor.sender == s11.Uniswap.constructor.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,5-14,5#1]
s11.Uniswap.this == s11.Uniswap.constructor.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,5-14,5#1]
s11.Uniswap.constructor.sender == s11.Uniswap.constructor.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,5-14,5#1]
s11.Uniswap.constructor.sender == s11.Uniswap.constructor.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,5-14,5#1]
s11.Uniswap.constructor.token_addr..lbl == s11.Uniswap.constructor.sender ;["Argument token_addr may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,17-14,17#1]
s11.Uniswap.constructor._name..lbl == s11.Uniswap.constructor.sender ;["Argument _name may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,37-14,37#1]
s11.Uniswap.constructor._symbol..lbl == s11.Uniswap.constructor.sender ;["Argument _symbol may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 14,50-14,50#1]
s11.Uniswap.removeLiquidity.sender == s11.Uniswap.removeLiquidity.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.this == s11.Uniswap.removeLiquidity.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.this == s11.Uniswap.removeLiquidity.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.removeLiquidity.sender == s11.Uniswap.removeLiquidity.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.removeLiquidity.amount..lbl == s11.Uniswap.removeLiquidity.sender ;["Argument amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,34-56,34#1]
s11.Uniswap.removeLiquidity.min_eth..lbl == s11.Uniswap.removeLiquidity.sender ;["Argument min_eth may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,47-56,47#1]
s11.Uniswap.removeLiquidity.min_tokens..lbl == s11.Uniswap.removeLiquidity.sender ;["Argument min_tokens may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,61-56,61#1]
s11.Uniswap.removeLiquidity.deadline..lbl == s11.Uniswap.removeLiquidity.sender ;["Argument deadline may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,78-56,78#1]
s11.Uniswap.this == s11.Uniswap.send.extpc ;["Integrity requirement to call this method may be incorrect@Builtin": 0,0-0,0#1]
s11.Uniswap.TOP == s11.Uniswap.send.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@Builtin": 0,0-0,0#1]
s11.Uniswap.any == s11.Uniswap.send.gamma ;["The final reentrancy lock label may be declared incorrectly@Builtin": 0,0-0,0#1]
s11.Uniswap.this == s11.Uniswap.send.returnV ;["Integrity label of this method's return value may be incorrect@Builtin": 0,0-0,0#1]
s11.Uniswap.send.target..lbl == s11.Uniswap.this ;["Argument target may be labeled incorrectly@Builtin": 1,0-1,0#1]
s11.Uniswap.send.amount..lbl == s11.Uniswap.this ;["Argument amount may be labeled incorrectly@Builtin": 1,1-1,1#1]
s11.Uniswap.addLiquidity.sender == s11.Uniswap.addLiquidity.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,13-23,13#1]
s11.Uniswap.this == s11.Uniswap.addLiquidity.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,13-23,13#1]
s11.Uniswap.this == s11.Uniswap.addLiquidity.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,13-23,13#1]
s11.Uniswap.addLiquidity.sender == s11.Uniswap.addLiquidity.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,13-23,13#1]
s11.Uniswap.addLiquidity.min_liquidity..lbl == s11.Uniswap.addLiquidity.sender ;["Argument min_liquidity may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,31-23,31#1]
s11.Uniswap.addLiquidity.max_tokens..lbl == s11.Uniswap.addLiquidity.sender ;["Argument max_tokens may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,51-23,51#1]
s11.Uniswap.addLiquidity.deadline..lbl == s11.Uniswap.addLiquidity.sender ;["Argument deadline may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 23,68-23,68#1]

s12.IERC20.transferFrom.sender == s12.IERC20.transferFrom.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,31-8,31#1]
s12.IERC20.transferFrom.from == s12.IERC20.transferFrom.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,41-8,41#1]
s12.IERC20.any == s12.IERC20.transferFrom.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,47-8,47#1]
s12.IERC20.transferFrom.sender == s12.IERC20.transferFrom.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,13-8,13#1]
s12.IERC20.transferFrom.from..lbl == s12.IERC20.transferFrom.sender ;["Argument from may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,58-8,58#1]
s12.IERC20.transferFrom.to..lbl == s12.IERC20.transferFrom.sender ;["Argument to may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,72-8,72#1]
s12.IERC20.transferFrom.amount..lbl == s12.IERC20.transferFrom.sender ;["Argument amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,84-8,84#1]
s12.IERC20.transfer.from == s12.IERC20.transfer.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,27-7,27#1]
s12.IERC20.this == s12.IERC20.transfer.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,35-7,35#1]
s12.IERC20.this == s12.IERC20.transfer.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,35-7,35#1]
s12.IERC20.transfer.from == s12.IERC20.transfer.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,13-7,13#1]
s12.IERC20.transfer.from..lbl == s12.IERC20.transfer.from ;["Argument from may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,47-7,47#1]
s12.IERC20.transfer.to..lbl == s12.IERC20.transfer.from ;["Argument to may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,61-7,61#1]
s12.IERC20.transfer.amount..lbl == s12.IERC20.transfer.from ;["Argument amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,73-7,73#1]
s12.IERC20.any == s12.IERC20.balance.extpc ;["Integrity requirement to call this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.balance.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.balance.gamma ;["The final reentrancy lock label may be declared incorrectly@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.balance.returnV ;["Integrity label of this method's return value may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.balance.addr..lbl == s12.IERC20.any ;["Argument addr may be labeled incorrectly@Builtin": 1,0-1,0#1]
s12.IERC20.approve.sender == s12.IERC20.approve.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,26-5,26#1]
s12.IERC20.approve.sender == s12.IERC20.approve.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,26-5,26#1]
s12.IERC20.approve.sender == s12.IERC20.approve.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,26-5,26#1]
s12.IERC20.approve.sender == s12.IERC20.approve.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,13-5,13#1]
s12.IERC20.approve.allowed..lbl == s12.IERC20.approve.sender ;["Argument allowed may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,34-5,34#1]
s12.IERC20.approve.amount..lbl == s12.IERC20.approve.sender ;["Argument amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,51-5,51#1]
s12.IERC20.approveFrom.from == s12.IERC20.approveFrom.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,30-6,30#1]
s12.IERC20.this == s12.IERC20.approveFrom.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,36-6,36#1]
s12.IERC20.this == s12.IERC20.approveFrom.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,36-6,36#1]
s12.IERC20.approveFrom.from == s12.IERC20.approveFrom.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,13-6,13#1]
s12.IERC20.approveFrom.from..lbl == s12.IERC20.approveFrom.from ;["Argument from may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,48-6,48#1]
s12.IERC20.approveFrom.spender..lbl == s12.IERC20.approveFrom.from ;["Argument spender may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,62-6,62#1]
s12.IERC20.approveFrom.val..lbl == s12.IERC20.approveFrom.from ;["Argument val may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,79-6,79#1]
s12.IERC20.balanceOf.sender == s12.IERC20.balanceOf.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.this == s12.IERC20.balanceOf.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.this == s12.IERC20.balanceOf.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.balanceOf.sender == s12.IERC20.balanceOf.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.balanceOf.account..lbl == s12.IERC20.balanceOf.sender ;["Argument account may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,28-4,28#1]
s12.IERC20.this == s12.IERC20.send.extpc ;["Integrity requirement to call this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.send.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.any == s12.IERC20.send.gamma ;["The final reentrancy lock label may be declared incorrectly@Builtin": 0,0-0,0#1]
s12.IERC20.this == s12.IERC20.send.returnV ;["Integrity label of this method's return value may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.send.target..lbl == s12.IERC20.this ;["Argument target may be labeled incorrectly@Builtin": 1,0-1,0#1]
s12.IERC20.send.amount..lbl == s12.IERC20.this ;["Argument amount may be labeled incorrectly@Builtin": 1,1-1,1#1]

s12.IERC20.transferFrom.sender == s12.IERC20.transferFrom.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,31-8,31#1]
s12.IERC20.transferFrom.from == s12.IERC20.transferFrom.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,41-8,41#1]
s12.IERC20.any == s12.IERC20.transferFrom.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,47-8,47#1]
s12.IERC20.transferFrom.sender == s12.IERC20.transferFrom.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,13-8,13#1]
s12.IERC20.transferFrom.from..lbl == s12.IERC20.transferFrom.sender ;["Argument from may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,58-8,58#1]
s12.IERC20.transferFrom.to..lbl == s12.IERC20.transferFrom.sender ;["Argument to may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,72-8,72#1]
s12.IERC20.transferFrom.amount..lbl == s12.IERC20.transferFrom.sender ;["Argument amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 8,84-8,84#1]
s12.IERC20.transfer.from == s12.IERC20.transfer.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,27-7,27#1]
s12.IERC20.this == s12.IERC20.transfer.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,35-7,35#1]
s12.IERC20.this == s12.IERC20.transfer.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,35-7,35#1]
s12.IERC20.transfer.from == s12.IERC20.transfer.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,13-7,13#1]
s12.IERC20.transfer.from..lbl == s12.IERC20.transfer.from ;["Argument from may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,47-7,47#1]
s12.IERC20.transfer.to..lbl == s12.IERC20.transfer.from ;["Argument to may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,61-7,61#1]
s12.IERC20.transfer.amount..lbl == s12.IERC20.transfer.from ;["Argument amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 7,73-7,73#1]
s12.IERC20.any == s12.IERC20.balance.extpc ;["Integrity requirement to call this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.balance.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.balance.gamma ;["The final reentrancy lock label may be declared incorrectly@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.balance.returnV ;["Integrity label of this method's return value may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.balance.addr..lbl == s12.IERC20.any ;["Argument addr may be labeled incorrectly@Builtin": 1,0-1,0#1]
s12.IERC20.approve.sender == s12.IERC20.approve.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,26-5,26#1]
s12.IERC20.approve.sender == s12.IERC20.approve.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,26-5,26#1]
s12.IERC20.approve.sender == s12.IERC20.approve.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,26-5,26#1]
s12.IERC20.approve.sender == s12.IERC20.approve.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,13-5,13#1]
s12.IERC20.approve.allowed..lbl == s12.IERC20.approve.sender ;["Argument allowed may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,34-5,34#1]
s12.IERC20.approve.amount..lbl == s12.IERC20.approve.sender ;["Argument amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 5,51-5,51#1]
s12.IERC20.approveFrom.from == s12.IERC20.approveFrom.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,30-6,30#1]
s12.IERC20.this == s12.IERC20.approveFrom.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,36-6,36#1]
s12.IERC20.this == s12.IERC20.approveFrom.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,36-6,36#1]
s12.IERC20.approveFrom.from == s12.IERC20.approveFrom.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,13-6,13#1]
s12.IERC20.approveFrom.from..lbl == s12.IERC20.approveFrom.from ;["Argument from may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,48-6,48#1]
s12.IERC20.approveFrom.spender..lbl == s12.IERC20.approveFrom.from ;["Argument spender may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,62-6,62#1]
s12.IERC20.approveFrom.val..lbl == s12.IERC20.approveFrom.from ;["Argument val may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 6,79-6,79#1]
s12.IERC20.balanceOf.sender == s12.IERC20.balanceOf.extpc ;["Integrity requirement to call this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.this == s12.IERC20.balanceOf.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.this == s12.IERC20.balanceOf.gamma ;["The final reentrancy lock label may be declared incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.balanceOf.sender == s12.IERC20.balanceOf.returnV ;["Integrity label of this method's return value may be incorrect@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,13-4,13#1]
s12.IERC20.balanceOf.account..lbl == s12.IERC20.balanceOf.sender ;["Argument account may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/IERC20.scif": 4,28-4,28#1]
s12.IERC20.this == s12.IERC20.send.extpc ;["Integrity requirement to call this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.TOP == s12.IERC20.send.inpc ;["Integrity pc level autoendorsed to when calling this method may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.any == s12.IERC20.send.gamma ;["The final reentrancy lock label may be declared incorrectly@Builtin": 0,0-0,0#1]
s12.IERC20.this == s12.IERC20.send.returnV ;["Integrity label of this method's return value may be incorrect@Builtin": 0,0-0,0#1]
s12.IERC20.send.target..lbl == s12.IERC20.this ;["Argument target may be labeled incorrectly@Builtin": 1,0-1,0#1]
s12.IERC20.send.amount..lbl == s12.IERC20.this ;["Argument amount may be labeled incorrectly@Builtin": 1,1-1,1#1]

(s11.Uniswap.removeLiquidity.ILK ⊔ s11.Uniswap.removeLiquidity.rtn.lk) <= s11.Uniswap.removeLiquidity.gamma ;["This function does not maintain reentrancy locks as specified in signature@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 56,13-56,13#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.NameL57C18s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,18-57,18#5]
s11.Uniswap.removeLiquidity.ILK <= (s11.Uniswap.removeLiquidity.ILK ⊔ s11.Uniswap.removeLiquidity.NameL57C18s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,18-57,18#5]
s11.Uniswap.removeLiquidity.PC <= LITERAL...L57C27s11 ;["Control flow must be trusted to use this literal@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#1]
s11.Uniswap.removeLiquidity.amount..lbl <= s11.Uniswap.removeLiquidity.cmpL57C18s11 ;["Integrity of left hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,18-57,18#1]
LITERAL...L57C27s11 <= s11.Uniswap.removeLiquidity.cmpL57C18s11 ;["Integrity of right hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,18-57,18#1]
s11.Uniswap.removeLiquidity.ILK <= s11.Uniswap.removeLiquidity.ILK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,18-57,18#5]
s11.Uniswap.removeLiquidity.CompareL57C18s11.PC <= s11.Uniswap.removeLiquidity.CompareL57C18s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,18-57,18#5]
s11.Uniswap.removeLiquidity.CompareL57C18s11.LK <= (s11.Uniswap.removeLiquidity.ILK ⊔ s11.Uniswap.removeLiquidity.CompareL57C18s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,18-57,18#5]
s11.Uniswap.removeLiquidity.CompareL57C18s11.PC.next <= s11.Uniswap.removeLiquidity.NameL57C32s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,32-57,32#5]
s11.Uniswap.removeLiquidity.CompareL57C18s11.LK <= (s11.Uniswap.removeLiquidity.CompareL57C18s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL57C32s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,32-57,32#5]
s11.Uniswap.removeLiquidity.deadline..lbl <= s11.Uniswap.removeLiquidity.cmpL57C32s11 ;["Integrity of left hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,32-57,32#1]
s11.Uniswap.removeLiquidity.now..lbl <= s11.Uniswap.removeLiquidity.cmpL57C32s11 ;["Integrity of right hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,32-57,32#1]
s11.Uniswap.removeLiquidity.CompareL57C18s11.LK <= s11.Uniswap.removeLiquidity.CompareL57C18s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,32-57,32#5]
s11.Uniswap.removeLiquidity.cmpL57C18s11 <= s11.Uniswap.removeLiquidity.boolL57C27s11 ;["Integrity of left hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#1]
s11.Uniswap.removeLiquidity.cmpL57C32s11 <= s11.Uniswap.removeLiquidity.boolL57C27s11 ;["Integrity of right hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#1]
s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK <= s11.Uniswap.removeLiquidity.ILK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#5]
s11.Uniswap.removeLiquidity.BoolOpL57C27s11.PC <= s11.Uniswap.removeLiquidity.BoolOpL57C27s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#5]
s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK <= (s11.Uniswap.removeLiquidity.ILK ⊔ s11.Uniswap.removeLiquidity.BoolOpL57C27s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,27-57,27#5]
s11.Uniswap.removeLiquidity.BoolOpL57C27s11.PC.next <= s11.Uniswap.removeLiquidity.NameL57C53s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,53-57,53#5]
s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK <= (s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL57C53s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,53-57,53#5]
s11.Uniswap.removeLiquidity.PC <= LITERAL...L57C63s11 ;["Control flow must be trusted to use this literal@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#1]
s11.Uniswap.removeLiquidity.min_eth..lbl <= s11.Uniswap.removeLiquidity.cmpL57C53s11 ;["Integrity of left hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,53-57,53#1]
LITERAL...L57C63s11 <= s11.Uniswap.removeLiquidity.cmpL57C53s11 ;["Integrity of right hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,53-57,53#1]
s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,53-57,53#5]
s11.Uniswap.removeLiquidity.CompareL57C53s11.PC <= s11.Uniswap.removeLiquidity.CompareL57C53s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,53-57,53#5]
s11.Uniswap.removeLiquidity.CompareL57C53s11.LK <= (s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK ⊔ s11.Uniswap.removeLiquidity.CompareL57C53s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,53-57,53#5]
s11.Uniswap.removeLiquidity.CompareL57C53s11.PC.next <= s11.Uniswap.removeLiquidity.NameL57C68s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,68-57,68#5]
s11.Uniswap.removeLiquidity.CompareL57C53s11.LK <= (s11.Uniswap.removeLiquidity.CompareL57C53s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL57C68s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,68-57,68#5]
s11.Uniswap.removeLiquidity.PC <= LITERAL...L57C81s11 ;["Control flow must be trusted to use this literal@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,81-57,81#1]
s11.Uniswap.removeLiquidity.min_tokens..lbl <= s11.Uniswap.removeLiquidity.cmpL57C68s11 ;["Integrity of left hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,68-57,68#1]
LITERAL...L57C81s11 <= s11.Uniswap.removeLiquidity.cmpL57C68s11 ;["Integrity of right hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,68-57,68#1]
s11.Uniswap.removeLiquidity.CompareL57C53s11.LK <= s11.Uniswap.removeLiquidity.CompareL57C53s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,68-57,68#5]
s11.Uniswap.removeLiquidity.cmpL57C53s11 <= s11.Uniswap.removeLiquidity.boolL57C63s11 ;["Integrity of left hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#1]
s11.Uniswap.removeLiquidity.cmpL57C68s11 <= s11.Uniswap.removeLiquidity.boolL57C63s11 ;["Integrity of right hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#1]
s11.Uniswap.removeLiquidity.BoolOpL57C63s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL57C27s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,63-57,63#5]
s11.Uniswap.removeLiquidity.boolL57C27s11 <= s11.Uniswap.removeLiquidity.boolL57C46s11 ;["Integrity of left hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,46-57,46#1]
s11.Uniswap.removeLiquidity.boolL57C63s11 <= s11.Uniswap.removeLiquidity.boolL57C46s11 ;["Integrity of right hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,46-57,46#1]
s11.Uniswap.removeLiquidity.BoolOpL57C46s11.LK <= s11.Uniswap.removeLiquidity.ILK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 57,46-57,46#5]
s11.Uniswap.removeLiquidity.total_liquidity..lbl == s11.Uniswap.this ;["Variable total_liquidity may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 58,14-58,14#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.total_liquidity..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 58,14-58,14#1]
s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL57C46s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 58,14-58,14#5]
s11.Uniswap.totalSupply..lbl <= s11.Uniswap.removeLiquidity.total_liquidity..lbl ;["Integrity of the value being assigned must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 58,32-58,32#1]
s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.PC <= s11.Uniswap.removeLiquidity.NameL59C17s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,17-59,17#5]
s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL59C17s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,17-59,17#5]
s11.Uniswap.removeLiquidity.PC <= LITERAL...L59C35s11 ;["Control flow must be trusted to use this literal@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,35-59,35#1]
s11.Uniswap.removeLiquidity.total_liquidity..lbl <= s11.Uniswap.removeLiquidity.cmpL59C17s11 ;["Integrity of left hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,17-59,17#1]
LITERAL...L59C35s11 <= s11.Uniswap.removeLiquidity.cmpL59C17s11 ;["Integrity of right hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,17-59,17#1]
s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL58C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 59,17-59,17#5]
s11.Uniswap.removeLiquidity.token_reserve..lbl == s11.Uniswap.this ;["Variable token_reserve may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,14-60,14#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.token_reserve..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,14-60,14#1]
s11.Uniswap.removeLiquidity.AnnAssignL60C14s11.LK <= s11.Uniswap.removeLiquidity.CompareL59C17s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,14-60,14#5]
s11.Uniswap.removeLiquidity.CompareL59C17s11.PC <= s11.Uniswap.removeLiquidity.NameL60C54s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,54-60,54#5]
s11.Uniswap.removeLiquidity.CompareL59C17s11.LK <= (s11.Uniswap.removeLiquidity.CompareL59C17s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL60C54s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,54-60,54#5]
s11.Uniswap.removeLiquidity.CallL60C46s11.LK <= s11.Uniswap.removeLiquidity.CompareL59C17s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,46-60,46#5]
s11.Uniswap.removeLiquidity.CallL60C46s11.PC <= s11.Uniswap.removeLiquidity.CallL60C46s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,46-60,46#5]
s11.Uniswap.removeLiquidity.CallL60C46s11.LK <= (s11.Uniswap.removeLiquidity.CompareL59C17s11.LK ⊔ s11.Uniswap.removeLiquidity.CallL60C46s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,46-60,46#5]
s11.Uniswap.this..lbl <= s11.Uniswap.this ;["Input to the 1st argument must be trusted enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,46-60,46#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.this ;["Current control flow must be trusted to feed the 1st-th argument value@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,46-60,46#1]
s11.Uniswap.token..lbl <= s11.Uniswap.this ;["Target contract must be trusted to call this method@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.this ;["Current control flow must be trusted to call this method@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
s11.Uniswap.this <= (s12.IERC20.this ⊔ s11.Uniswap.removeLiquidity.CompareL59C17s11.LK) ;["Calling this function does not respect static reentrancy locks@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
(s12.IERC20.this ⊔ s12.IERC20.this) == s11.Uniswap.removeLiquidity.CallL60C36s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#5]
s11.Uniswap.removeLiquidity.CallL60C36s11.LK <= s11.Uniswap.removeLiquidity.CompareL59C17s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#5]
s11.Uniswap.this <= s11.Uniswap.removeLiquidity.token_reserve..lbl ;["Integrity of the value being assigned must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 60,36-60,36#1]
s11.Uniswap.removeLiquidity.amt..lbl == s11.Uniswap.this ;["Variable amt may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,14-61,14#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.amt..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,14-61,14#1]
s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL60C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,14-61,14#5]
s11.Uniswap.removeLiquidity.amount..lbl <= s11.Uniswap.removeLiquidity.endorse.fromL61C36s11 ;["The expression must be trusted to be endorsed@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,20-61,20#1]
s11.Uniswap.removeLiquidity.endorse.toL61C36s11 <= s11.Uniswap.removeLiquidity.endorseL61C20s11 ;["The integrity level of this expression would be endorsed@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,20-61,20#1]
s11.Uniswap.removeLiquidity.endorseL61C20s11 <= s11.Uniswap.removeLiquidity.amt..lbl ;["Integrity of the value being assigned must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 61,20-61,20#1]
s11.Uniswap.removeLiquidity.eth_amount..lbl == s11.Uniswap.this ;["Variable eth_amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,14-62,14#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.eth_amount..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,14-62,14#1]
s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,14-62,14#5]
s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.PC <= s11.Uniswap.removeLiquidity.NameL62C27s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,27-62,27#5]
s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL62C27s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,27-62,27#5]
s11.Uniswap.removeLiquidity.NameL62C27s11.PC.next <= s11.Uniswap.removeLiquidity.NameL62C49s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,49-62,49#5]
s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL62C49s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,49-62,49#5]
s11.Uniswap.removeLiquidity.CallL62C41s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,41-62,41#5]
s11.Uniswap.removeLiquidity.CallL62C41s11.PC <= s11.Uniswap.removeLiquidity.CallL62C41s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,41-62,41#5]
s11.Uniswap.removeLiquidity.CallL62C41s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ⊔ s11.Uniswap.removeLiquidity.CallL62C41s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,41-62,41#5]
s11.Uniswap.this..lbl <= s11.Uniswap.any ;["Input to the 1st argument must be trusted enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,41-62,41#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.any ;["Current control flow must be trusted to feed the 1st-th argument value@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,41-62,41#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.any ;["Current control flow must be trusted to call this method@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#1]
s11.Uniswap.any <= (s11.Uniswap.TOP ⊔ s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK) ;["Calling this function does not respect static reentrancy locks@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#1]
(s11.Uniswap.TOP ⊔ s11.Uniswap.TOP) == s11.Uniswap.removeLiquidity.CallL62C33s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#5]
s11.Uniswap.removeLiquidity.CallL62C33s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,33-62,33#5]
s11.Uniswap.removeLiquidity.amt..lbl <= s11.Uniswap.removeLiquidity.binL62C27s11 ;["Integrity of left hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,27-62,27#1]
s11.Uniswap.TOP <= s11.Uniswap.removeLiquidity.binL62C27s11 ;["Integrity of right hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,27-62,27#1]
s11.Uniswap.removeLiquidity.CallL62C33s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,27-62,27#5]
s11.Uniswap.removeLiquidity.BinOpL62C27s11.PC <= s11.Uniswap.removeLiquidity.BinOpL62C27s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,27-62,27#5]
s11.Uniswap.removeLiquidity.BinOpL62C27s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ⊔ s11.Uniswap.removeLiquidity.BinOpL62C27s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,27-62,27#5]
s11.Uniswap.removeLiquidity.binL62C27s11 <= s11.Uniswap.removeLiquidity.binL62C54s11 ;["Integrity of left hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,54-62,54#1]
s11.Uniswap.removeLiquidity.total_liquidity..lbl <= s11.Uniswap.removeLiquidity.binL62C54s11 ;["Integrity of right hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,54-62,54#1]
s11.Uniswap.removeLiquidity.BinOpL62C27s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL61C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,54-62,54#5]
s11.Uniswap.removeLiquidity.binL62C54s11 <= s11.Uniswap.removeLiquidity.eth_amount..lbl ;["Integrity of the value being assigned must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 62,54-62,54#1]
s11.Uniswap.removeLiquidity.token_amount..lbl == s11.Uniswap.this ;["Variable token_amount may be labeled incorrectly@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,14-63,14#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.token_amount..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,14-63,14#1]
s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,14-63,14#5]
s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.PC <= s11.Uniswap.removeLiquidity.NameL63C29s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,29-63,29#5]
s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL63C29s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,29-63,29#5]
s11.Uniswap.removeLiquidity.amt..lbl <= s11.Uniswap.removeLiquidity.binL63C29s11 ;["Integrity of left hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,29-63,29#1]
s11.Uniswap.removeLiquidity.token_reserve..lbl <= s11.Uniswap.removeLiquidity.binL63C29s11 ;["Integrity of right hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,29-63,29#1]
s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,29-63,29#5]
s11.Uniswap.removeLiquidity.BinOpL63C29s11.PC <= s11.Uniswap.removeLiquidity.BinOpL63C29s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,29-63,29#5]
s11.Uniswap.removeLiquidity.BinOpL63C29s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK ⊔ s11.Uniswap.removeLiquidity.BinOpL63C29s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,29-63,29#5]
s11.Uniswap.removeLiquidity.binL63C29s11 <= s11.Uniswap.removeLiquidity.binL63C35s11 ;["Integrity of left hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#1]
s11.Uniswap.removeLiquidity.total_liquidity..lbl <= s11.Uniswap.removeLiquidity.binL63C35s11 ;["Integrity of right hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#1]
s11.Uniswap.removeLiquidity.BinOpL63C29s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL62C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#5]
s11.Uniswap.removeLiquidity.binL63C35s11 <= s11.Uniswap.removeLiquidity.token_amount..lbl ;["Integrity of the value being assigned must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 63,35-63,35#1]
s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.PC <= s11.Uniswap.removeLiquidity.NameL64C17s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,17-64,17#5]
s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL64C17s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,17-64,17#5]
s11.Uniswap.removeLiquidity.eth_amount..lbl <= s11.Uniswap.removeLiquidity.cmpL64C17s11 ;["Integrity of left hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,17-64,17#1]
s11.Uniswap.removeLiquidity.min_eth..lbl <= s11.Uniswap.removeLiquidity.cmpL64C17s11 ;["Integrity of right hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,17-64,17#1]
s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,17-64,17#5]
s11.Uniswap.removeLiquidity.CompareL64C17s11.PC <= s11.Uniswap.removeLiquidity.CompareL64C17s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,17-64,17#5]
s11.Uniswap.removeLiquidity.CompareL64C17s11.LK <= (s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK ⊔ s11.Uniswap.removeLiquidity.CompareL64C17s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,17-64,17#5]
s11.Uniswap.removeLiquidity.CompareL64C17s11.PC.next <= s11.Uniswap.removeLiquidity.NameL64C42s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,42-64,42#5]
s11.Uniswap.removeLiquidity.CompareL64C17s11.LK <= (s11.Uniswap.removeLiquidity.CompareL64C17s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL64C42s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,42-64,42#5]
s11.Uniswap.removeLiquidity.token_amount..lbl <= s11.Uniswap.removeLiquidity.cmpL64C42s11 ;["Integrity of left hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,42-64,42#1]
s11.Uniswap.removeLiquidity.min_tokens..lbl <= s11.Uniswap.removeLiquidity.cmpL64C42s11 ;["Integrity of right hand expression doesn't flow to value of this compare operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,42-64,42#1]
s11.Uniswap.removeLiquidity.CompareL64C17s11.LK <= s11.Uniswap.removeLiquidity.CompareL64C17s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,42-64,42#5]
s11.Uniswap.removeLiquidity.cmpL64C17s11 <= s11.Uniswap.removeLiquidity.boolL64C31s11 ;["Integrity of left hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,31-64,31#1]
s11.Uniswap.removeLiquidity.cmpL64C42s11 <= s11.Uniswap.removeLiquidity.boolL64C31s11 ;["Integrity of right hand expression doesn't flow to value of this boolean operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,31-64,31#1]
s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK <= s11.Uniswap.removeLiquidity.AnnAssignL63C14s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 64,31-64,31#5]
s11.Uniswap.balances..lbl == s11.Uniswap.removeLiquidity.SubscriptL65C9s11 ;["Integrity level of the subscript value is not trustworthy enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,9-65,9#1]
s11.Uniswap.removeLiquidity.BoolOpL64C31s11.PC <= s11.Uniswap.removeLiquidity.SubscriptL65C9s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,24-65,24#5]
s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK <= (s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK ⊔ s11.Uniswap.removeLiquidity.SubscriptL65C9s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,24-65,24#5]
s11.Uniswap.balances..lbl == s11.Uniswap.removeLiquidity.SubscriptL65C9s11 ;["Integrity level of the subscript value is not trustworthy enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,9-65,9#1]
s11.Uniswap.removeLiquidity.SubscriptL65C9s11.PC.next <= s11.Uniswap.removeLiquidity.SubscriptL65C9s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,9-65,9#5]
s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK <= (s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK ⊔ s11.Uniswap.removeLiquidity.SubscriptL65C9s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,9-65,9#5]
s11.Uniswap.removeLiquidity.SubscriptL65C9s11 <= s11.Uniswap.removeLiquidity.binL65C29s11 ;["Integrity of left hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.amt..lbl <= s11.Uniswap.removeLiquidity.binL65C29s11 ;["Integrity of right hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#5]
s11.Uniswap.removeLiquidity.binL65C29s11 <= s11.Uniswap.removeLiquidity.SubscriptL65C9s11 ;["Integrity of the value being assigned must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.removeLiquidity.SubscriptL65C9s11 ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,29-65,29#1]
s11.Uniswap.removeLiquidity.AssignL65C24s11.LK <= s11.Uniswap.removeLiquidity.BoolOpL64C31s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 65,24-65,24#5]
s11.Uniswap.removeLiquidity.AssignL65C24s11.PC <= s11.Uniswap.removeLiquidity.NameL66C23s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#5]
s11.Uniswap.removeLiquidity.AssignL65C24s11.LK <= (s11.Uniswap.removeLiquidity.AssignL65C24s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL66C23s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#5]
s11.Uniswap.removeLiquidity.total_liquidity..lbl <= s11.Uniswap.removeLiquidity.binL66C23s11 ;["Integrity of left hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#1]
s11.Uniswap.removeLiquidity.amt..lbl <= s11.Uniswap.removeLiquidity.binL66C23s11 ;["Integrity of right hand expression doesn't flow to value of this binary operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#1]
s11.Uniswap.removeLiquidity.AssignL65C24s11.LK <= s11.Uniswap.removeLiquidity.AssignL65C24s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#5]
s11.Uniswap.removeLiquidity.binL66C23s11 <= s11.Uniswap.totalSupply..lbl ;["Integrity of the value being assigned must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.totalSupply..lbl ;["Integrity of control flow must be trusted to allow this assignment@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,23-66,23#1]
s11.Uniswap.removeLiquidity.AssignL66C9s11.LK <= s11.Uniswap.removeLiquidity.AssignL65C24s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 66,9-66,9#5]
s11.Uniswap.removeLiquidity.AssignL66C9s11.PC <= s11.Uniswap.removeLiquidity.NameL67C14s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,14-67,14#5]
s11.Uniswap.removeLiquidity.AssignL66C9s11.LK <= (s11.Uniswap.removeLiquidity.AssignL66C9s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL67C14s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,14-67,14#5]
s11.Uniswap.removeLiquidity.NameL67C14s11.PC.next <= s11.Uniswap.removeLiquidity.NameL67C22s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,22-67,22#5]
s11.Uniswap.removeLiquidity.AssignL66C9s11.LK <= (s11.Uniswap.removeLiquidity.AssignL66C9s11.LK ⊔ s11.Uniswap.removeLiquidity.NameL67C22s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,22-67,22#5]
s11.Uniswap.removeLiquidity.sender..lbl <= s11.Uniswap.this ;["Input to the 1st argument must be trusted enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,14-67,14#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.this ;["Current control flow must be trusted to feed the 1st-th argument value@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,14-67,14#1]
s11.Uniswap.removeLiquidity.eth_amount..lbl <= s11.Uniswap.this ;["Input to the 2nd argument must be trusted enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,22-67,22#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.this ;["Current control flow must be trusted to feed the 2nd-th argument value@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,22-67,22#1]
s11.Uniswap.removeLiquidity.PC <= s11.Uniswap.this ;["Current control flow must be trusted to call this method@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,9-67,9#1]
s11.Uniswap.this <= (s11.Uniswap.TOP ⊔ s11.Uniswap.removeLiquidity.AssignL66C9s11.LK) ;["Calling this function does not respect static reentrancy locks@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,9-67,9#1]
(s11.Uniswap.TOP ⊔ s11.Uniswap.any) == s11.Uniswap.removeLiquidity.CallL67C9s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,9-67,9#5]
s11.Uniswap.removeLiquidity.CallL67C9s11.LK <= s11.Uniswap.removeLiquidity.AssignL66C9s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 67,9-67,9#5]
s11.Uniswap.removeLiquidity.CallL67C9s11.PC <= s11.Uniswap.removeLiquidity.atomicL68C9s11.NameL69C36s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,36-69,36#5]
s11.Uniswap.removeLiquidity.CallL67C9s11.LK <= (s11.Uniswap.removeLiquidity.CallL67C9s11.LK ⊔ s11.Uniswap.removeLiquidity.atomicL68C9s11.NameL69C36s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,36-69,36#5]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.LK <= s11.Uniswap.removeLiquidity.CallL67C9s11.LK ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,28-69,28#5]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.PC <= s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,28-69,28#5]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.LK <= (s11.Uniswap.removeLiquidity.CallL67C9s11.LK ⊔ s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,28-69,28#5]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.PC.next <= s11.Uniswap.removeLiquidity.atomicL68C9s11.NameL69C43s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,43-69,43#5]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.LK <= (s11.Uniswap.removeLiquidity.CallL67C9s11.LK ⊔ s11.Uniswap.removeLiquidity.atomicL68C9s11.NameL69C43s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,43-69,43#5]
s11.Uniswap.removeLiquidity.atomicL68C9s11.NameL69C43s11.PC.next <= s11.Uniswap.removeLiquidity.atomicL68C9s11.NameL69C51s11.PC.next ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,51-69,51#5]
s11.Uniswap.removeLiquidity.atomicL68C9s11.CallL69C28s11.LK <= (s11.Uniswap.removeLiquidity.CallL67C9s11.LK ⊔ s11.Uniswap.removeLiquidity.atomicL68C9s11.NameL69C51s11.PC.next) ;["Static reentrancy locks should be maintained except during the last operation@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,51-69,51#5]
s11.Uniswap.this..lbl <= s12.IERC20.transfer.from ;["Input to the 1st argument must be trusted enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,28-69,28#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.PC <= s12.IERC20.transfer.from ;["Current control flow must be trusted to feed the 1st-th argument value@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,28-69,28#1]
s11.Uniswap.removeLiquidity.sender..lbl <= s12.IERC20.transfer.from ;["Input to the 2nd argument must be trusted enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,43-69,43#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.PC <= s12.IERC20.transfer.from ;["Current control flow must be trusted to feed the 2nd-th argument value@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,43-69,43#1]
s11.Uniswap.removeLiquidity.token_amount..lbl <= s12.IERC20.transfer.from ;["Input to the 3rd argument must be trusted enough@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,51-69,51#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.PC <= s12.IERC20.transfer.from ;["Current control flow must be trusted to feed the 3rd-th argument value@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,51-69,51#1]
s11.Uniswap.token..lbl <= s12.IERC20.transfer.from ;["Target contract must be trusted to call this method@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,19-69,19#1]
s11.Uniswap.removeLiquidity.atomicL68C9s11.PC <= s12.IERC20.transfer.from ;["Current control flow must be trusted to call this method@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,19-69,19#1]
s12.IERC20.transfer.from <= (s12.IERC20.this ⊔ s11.Uniswap.removeLiquidity.CallL67C9s11.LK) ;["Calling this function does not respect static reentrancy locks@/Users/animula/GitReps/SCIF/test/contracts/applications/Uniswap_ERC20.scif": 69,19-69,19#1]
