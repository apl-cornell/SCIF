import BuiltIn

contract MultiUserWallet :
    {TOP => this}
    {this => sender}
    {sender => BOT}
    struct Message :
        sender : address{this}
        value : int{this}

    msg : Message{TOP}
    builtinAddress : address{TOP} = 0
    builtin : BuiltIn{this} = BuiltIn(builtinAddress)

    balance : map(address{BOT}, int{this}){this}

    def deposit{sender, sender -> sender}() :
        endorse{sender -> this} :
            balance[msg.sender] = balance[msg.sender] + endorse(msg.value, sender, this)

    def withdraw{sender, sender -> sender}(amount : int{sender}) :
        endorse{sender -> this} :
            if balance[msg.sender] < amount :
                return
            balance[msg.sender] = balance[msg.sender] - endorse(amount, sender, this)
            builtin.send(msg.sender, endorse(amount, sender, this))
