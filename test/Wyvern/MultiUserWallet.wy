contract MultiUserWallet :
    {TOP => this}
    {this => sender}
    {sender => BOT}

    balance : map(address{BOT}, uint{this}){this}

    @public
    @payable
    def deposit{sender, sender -> sender}() :
        endorse{sender -> this} :
            balance[msg.sender] = balance[msg.sender] + endorse(msg.value, sender, this)

    @public
    def withdraw{sender, sender -> sender}(amount : uint{sender}) :
        if balance[msg.sender] < amount :
            return

        endorse{sender -> this} :
            balance[msg.sender] = balance[msg.sender] - endorse(amount, sender, this)
            send(msg.sender, endorse(amount, sender, this))
