contract Wallet :
    {TOP => this}
    {this => sender}
    {sender => BOT}
    owner : address{this}
    balance : uint{this}

    @public
    @payable
    def deposit{sender, sender -> sender}() :
        endorse{sender -> this} :
            balance = balance + endorse(msg.value, sender, this)

    @public
    def withdraw{sender, sender -> sender}(amount : uint{sender}) :
        if balance < amount or msg.sender != owner :
            return

        endorse{sender -> this} :
            balance = balance - endorse(amount, sender, this)
            send(msg.sender, endorse(amount, sender, this))
